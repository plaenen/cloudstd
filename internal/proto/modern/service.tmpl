syntax = "proto3";

package {{.Package}};

import "{{.PackagePath}}/request_response.proto";

// {{.ResourceName | ToTitle}}Service defines methods for managing {{.ResourcePluralName}}.
service {{.ResourceName | ToTitle}}Service {
  // List{{.ResourcePluralName | ToTitle}} retrieves a list of {{.ResourceName}} resources from the server.
  rpc List{{.ResourcePluralName | ToTitle}}(List{{.ResourcePluralName | ToTitle}}Request) returns (List{{.ResourcePluralName | ToTitle}}Response) {}
  // BatchGet{{.ResourcePluralName | ToTitle}} retrieves multiple {{.ResourceName}} resources from the server.
  rpc BatchGet{{.ResourcePluralName | ToTitle}}(BatchGet{{.ResourcePluralName | ToTitle}}Request) returns (BatchGet{{.ResourcePluralName | ToTitle}}Response) {}
  // Get{{.ResourceName | ToTitle}} retrieves a single {{.ResourceName}} resource from the server.
  rpc Get{{.ResourceName | ToTitle}}(Get{{.ResourceName | ToTitle}}Request) returns (Get{{.ResourceName | ToTitle}}Response) {}
  // Create{{.ResourceName | ToTitle}} creates a new {{.ResourceName}} resource on the server.
  rpc Create{{.ResourceName | ToTitle}}(Create{{.ResourceName | ToTitle}}Request) returns (Create{{.ResourceName | ToTitle}}Response) {}
  // Update{{.ResourceName | ToTitle}} updates the {{.ResourceName}} resource on the server.
  rpc Update{{.ResourceName | ToTitle}}(Update{{.ResourceName | ToTitle}}Request) returns (Update{{.ResourceName | ToTitle}}Response) {}
  // Delete{{.ResourceName | ToTitle}} deletes the {{.ResourceName}} resource from the server.
  rpc Delete{{.ResourceName | ToTitle}}(Delete{{.ResourceName | ToTitle}}Request) returns (Delete{{.ResourceName | ToTitle}}Response) {}
}
